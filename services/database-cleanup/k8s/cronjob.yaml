apiVersion: batch/v1
kind: CronJob
metadata:
  name: database-cleanup
  namespace: news-engine
  labels:
    app: database-cleanup
    component: maintenance
    part-of: news-engine
spec:
  # Run daily at 2 AM UTC
  schedule: "0 2 * * *"
  
  # Keep last 5 successful jobs and 3 failed jobs for debugging
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 3
  
  # Don't run if previous job is still running
  concurrencyPolicy: Forbid
  
  # Allow up to 1 hour for cleanup to complete
  startingDeadlineSeconds: 3600
  
  jobTemplate:
    spec:
      # Clean up job pods after 24 hours
      ttlSecondsAfterFinished: 86400
      
      template:
        metadata:
          labels:
            app: database-cleanup
            component: maintenance
        spec:
          restartPolicy: OnFailure
          
          containers:
          - name: database-cleanup
            image: k8s-news-engine/database-cleanup:v1.0.0
            imagePullPolicy: Never
            
            env:
            - name: DATABASE_URL
              value: "postgresql://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: app-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: app-password
            - name: DB_HOST
              value: "postgresql.news-engine.svc.cluster.local"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-db
            - name: TZ
              value: "UTC"
            
            resources:
              requests:
                memory: "64Mi"
                cpu: "50m"
              limits:
                memory: "128Mi" 
                cpu: "200m"
            
            # Health check - verify database connectivity
            command: ["/bin/sh"]
            args:
              - -c
              - |
                # Expand environment variables in DATABASE_URL
                export DATABASE_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable"
                
                # Test database connectivity first
                echo "Testing database connectivity..."
                psql "$DATABASE_URL" -c "SELECT 1;" > /dev/null || {
                  echo "ERROR: Cannot connect to database"
                  exit 1
                }
                
                # Run cleanup script
                /usr/local/bin/cleanup.sh

---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: database-cleanup-monitor
  namespace: news-engine
  labels:
    app: database-cleanup
spec:
  # This would be used if we had Prometheus monitoring
  # For now it's just a placeholder for future monitoring integration
  selector:
    matchLabels:
      app: database-cleanup