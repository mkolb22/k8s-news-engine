apiVersion: batch/v1
kind: CronJob
metadata:
  name: analytics-worker
  namespace: news-engine
  labels:
    app: analytics-worker
    component: analytics
    part-of: news-engine
spec:
  schedule: "*/15 * * * *"   # every 15 minutes
  concurrencyPolicy: Forbid  # Don't run concurrent jobs
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      activeDeadlineSeconds: 600  # 10 minute timeout
      template:
        metadata:
          labels:
            app: analytics-worker
            component: analytics
        spec:
          restartPolicy: OnFailure
          containers:
          - name: analytics
            image: k8s-news-engine/analytics-py:v2.0.3
            imagePullPolicy: Never
            env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: app-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: app-password
            - name: DB_HOST
              value: "postgresql.news-engine.svc.cluster.local"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-db
            command: ["/bin/sh"]
            args: ["-c", "export DATABASE_URL=\"postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}\" && python startup_health_check.py && python worker.py"]
            resources:
              requests:
                memory: "256Mi"
                cpu: "100m"
              limits:
                memory: "512Mi"
                cpu: "500m"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false  # Needs write access for sklearn temp files
              runAsNonRoot: true
              runAsUser: 1000
              capabilities:
                drop:
                - ALL